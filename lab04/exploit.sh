#!/bin/bash
set -e

RESULT_FILE="garak_result.json"
REPORT_FILE="garak_report.md"

# ===============================
# 0. Instalar Garak se não estiver presente
# ===============================
if ! python3 -m pip show garak > /dev/null 2>&1; then
    echo "[*] Instalando Garak..."
    pip install garak
else
    echo "[*] Garak já instalado."
fi

# ===============================
# 1. Criar configuração para Garak
# ===============================
echo "[*] Criando configuração rest_ollama.yaml..."
cat > rest_ollama.yaml <<'EOF'
generator:
  class: rest.RestGenerator
  config:
    method: POST
    url: http://127.0.0.1:11434/api/generate
    headers:
      Content-Type: application/json
    request_json:
      model: "llama3.2:1b"
      prompt: "{{PROMPT}}"
      stream: false
    response_jsonpath: "$.response"
EOF

# ===============================
# 2. Verificar se Ollama está rodando
# ===============================
echo "[*] Checando se Ollama está ativo..."
until curl -s http://127.0.0.1:11434/api/tags > /dev/null 2>&1; do
    echo "   ... aguardando Ollama"
    sleep 2
done
echo "[*] Ollama está pronto!"

# ===============================
# 3. Rodar Garak
# ===============================
echo "[*] Rodando Garak contra o Ollama..."
python3 -m garak \
  --model_type rest \
  --model_name rest_ollama.yaml \
  --probes encoding,promptinject,dan.Dan_11_0,sysprompt,malicious_urls,malware,leakage \
  --output "$RESULT_FILE" \
  --format json | tee garak_output.log

# ===============================
# 4. Gerar relatório Markdown
# ===============================
echo "[*] Gerando relatório resumido em $REPORT_FILE..."
python3 <<EOF
import json

with open("$RESULT_FILE") as f:
    data = json.load(f)

lines = ["# Relatório Garak", ""]
for r in data.get("results", []):
    probe = r.get("probe")
    case = r.get("case")
    status = r.get("status")
    emoji = "✅" if status.lower() == "pass" else "❌"
    lines.append(f"- **{probe} / {case}** → {emoji} {status.upper()}")

with open("$REPORT_FILE", "w") as f:
    f.write("\n".join(lines))

print("\n".join(lines))
EOF

# ===============================
# 5. Finalização
# ===============================
echo "[*] Exploração concluída."
echo "[*] Resultados estruturados em: $RESULT_FILE"
echo "[*] Relatório Markdown em: $REPORT_FILE"
echo "[*] Log completo em: garak_output.log"
